// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plurilingue.Infra.Data.Context;

namespace Plurilingue.Infra.Data.Migrations
{
    [DbContext(typeof(PlurilingueContext))]
    [Migration("20191117041210_UserAndAnswerRelationship")]
    partial class UserAndAnswerRelationship
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Plurilingue.Domain.Entities.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsBestAnswer");

                    b.Property<long>("Question_Id");

                    b.Property<string>("TextContent");

                    b.Property<long>("User_Id");

                    b.HasKey("Id");

                    b.HasIndex("Question_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("Plurilingue.Domain.Entities.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Language");

                    b.Property<string>("TextContent");

                    b.Property<string>("Title");

                    b.Property<long>("User_Id");

                    b.HasKey("Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Plurilingue.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.Property<long>("UserPoints");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Plurilingue.Domain.Entities.Answer", b =>
                {
                    b.HasOne("Plurilingue.Domain.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("Question_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Plurilingue.Domain.Entities.User", "User")
                        .WithMany("Answer")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Plurilingue.Domain.Entities.Question", b =>
                {
                    b.HasOne("Plurilingue.Domain.Entities.User", "User")
                        .WithMany("Questions")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
